<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload and Delete</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .container {
            width: 300px;
            margin: auto;
        }
        select, button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            font-size: 16px;
        }
    </style>
</head>
<body>
<div class="container">
    <h2>File Management</h2>

    <!-- Dropdown list of files -->
    <label for="fileList">Select a file to delete:</label>
    <select id="fileList">
        <!-- File options will be populated dynamically -->
    </select>

    <!-- Delete Button -->
    <button id="deleteFileBtn">Delete File</button>

    <hr>

    <!-- File Upload Section -->
    <label for="fileUpload">Upload a new file:</label>
    <input type="file" id="fileUpload" />
    <button id="uploadFileBtn">Upload File</button>
</div>

<script>
    // Function to get the list of files from the server
    function populateFileList() {
        fetch('/api/file')
            .then(response => response.json())
            .then(files => {
                const fileList = document.getElementById("fileList");
                fileList.innerHTML = ''; // Clear the existing options

                files.forEach(file => {
                    const option = document.createElement("option");
                    option.value = file;
                    option.textContent = file;
                    fileList.appendChild(option);
                });
            });
    }

    // Call populateFileList on page load
    window.onload = populateFileList;

    // Handle Delete File button click
    document.getElementById("deleteFileBtn").addEventListener("click", () => {
        const selectedFile = document.getElementById("fileList").value;
        if (selectedFile) {
            fetch(`/api/file/${selectedFile}`, {
                method: 'DELETE'
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    populateFileList(); // Update the dropdown after deletion
                })
                .catch(err => alert('Error deleting file.'));
        } else {
            alert("Please select a file to delete.");
        }
    });

    // Handle file upload
    document.getElementById("uploadFileBtn").addEventListener("click", () => {
        const fileInput = document.getElementById("fileUpload");
        const file = fileInput.files[0];
        if (file) {
            const formData = new FormData();
            formData.append('file', file);

            fetch('/api/file/upload', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                    populateFileList(); // Update the dropdown with the new file
                })
                .catch(err => alert('Error uploading file.'));
        } else {
            alert("Please select a file to upload.");
        }
    });
</script>
</body>
</html>
